# simple

fn DoSomething (value1: i32, value2: i32 = 3) => (i32, List<i32>)
    return value1 + value2

fn DoSomething (value1: i32, value2 = 3) => i32 | List<i32>
    return value1 + value2

fn DoSomething (value1, value2: i32 = 3) => i32
    return value1 + value2

fn DoSomething (value1, value2 = 3)
    return value1 + value2

# multiline parameters

fn DoSomething (
	value1: i32,
	value2: i32 = 3
) => (i32, List<i32>)
    return value1 + value2

fn DoSomething (
	value1: i32,
	value2 = 3
) => i32 | List<i32>
    return value1 + value2

fn DoSomething (
	value1,
	value2: i32 = 3
) => i32
    return value1 + value2

fn DoSomething (
	value1,
	value2 = 3
)
    return value1 + value2

# embraced

fn DoSomething (value1: i32, value2: i32 = 3) => (i32, List<i32>) {
    return value1 + value2
}

fn DoSomething (value1: i32, value2 = 3) => i32 | List<i32> {
    return value1 + value2
}

fn DoSomething (value1, value2: i32 = 3) => i32 {
    return value1 + value2
}

fn DoSomething (value1, value2 = 3) {
    return value1 + value2
}

# multiline parameters, embraced

fn DoSomething (
	value1: i32,
	value2: i32 = 3
) => (i32, List<i32>) {
    return value1 + value2
}

fn DoSomething (
	value1: i32,
	value2 = 3
) => i32 | List<i32> {
    return value1 + value2
}

fn DoSomething (
	value1,
	value2: i32 = 3
) => i32 {
    return value1 + value2
}

fn DoSomething (
	value1,
	value2 = 3
) {
    return value1 + value2
}
