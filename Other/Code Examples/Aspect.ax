@public
class Account
    balance : int = 20
 
    @public
    boolean withdraw(amount : int)
        if balance < amount
            return false
        balance = balance - amount
        return true

@public
aspect AccountAspect
    final int MIN_BALANCE = 10
 
    pointcut callWithDraw(amount : int, acc : Account) =>
     call(Account.withdraw(int)) and args(amount) and target(acc)
 
    @advice
    before(amount : int, acc : Account) => callWithDraw(amount, acc) : pass
 
    @advice
    boolean around(amount : int, acc : Account) => callWithDraw(amount, acc)
        if acc.balance < amount
            return false
        return proceed(amount, acc)
 
    @advice
    after(amount : int, balance : Account) => callWithDraw(amount, balance) : pass