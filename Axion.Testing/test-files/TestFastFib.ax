fn fibonacci (n: int)
    # -> F(n).
    if n < 0
        throw ValueError ("Negative arguments not implemented")
    return fib(n)[0]


# @private
fn fib (n: int)
    # -> (F(n), F(n+1)).
    if n == 0
        return (0, 1)
    else
        (a, b) = fib(n // 2)
        c = a * (b * 2 - a)
        d = a * a + b * b
        if n % 2 == 0
            return (c, d)
        else
            return (d, c + d)